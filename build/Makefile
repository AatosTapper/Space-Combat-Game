# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.26

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /Applications/CMake.app/Contents/bin/cmake

# The command to remove a file.
RM = /Applications/CMake.app/Contents/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = "/Users/aatos/VSCode C++/project-management-test/Space-Combat-Game"

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = "/Users/aatos/VSCode C++/project-management-test/Space-Combat-Game/build"

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/Applications/CMake.app/Contents/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/Applications/CMake.app/Contents/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start "/Users/aatos/VSCode C++/project-management-test/Space-Combat-Game/build/CMakeFiles" "/Users/aatos/VSCode C++/project-management-test/Space-Combat-Game/build//CMakeFiles/progress.marks"
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start "/Users/aatos/VSCode C++/project-management-test/Space-Combat-Game/build/CMakeFiles" 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named main

# Build rule for target.
main: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 main
.PHONY : main

# fast build rule for target.
main/fast:
	$(MAKE) $(MAKESILENT) -f src/CMakeFiles/main.dir/build.make src/CMakeFiles/main.dir/build
.PHONY : main/fast

#=============================================================================
# Target rules for targets named App

# Build rule for target.
App: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 App
.PHONY : App

# fast build rule for target.
App/fast:
	$(MAKE) $(MAKESILENT) -f src/App/CMakeFiles/App.dir/build.make src/App/CMakeFiles/App.dir/build
.PHONY : App/fast

#=============================================================================
# Target rules for targets named Base

# Build rule for target.
Base: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Base
.PHONY : Base

# fast build rule for target.
Base/fast:
	$(MAKE) $(MAKESILENT) -f src/Base/CMakeFiles/Base.dir/build.make src/Base/CMakeFiles/Base.dir/build
.PHONY : Base/fast

#=============================================================================
# Target rules for targets named Renderer

# Build rule for target.
Renderer: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Renderer
.PHONY : Renderer

# fast build rule for target.
Renderer/fast:
	$(MAKE) $(MAKESILENT) -f src/Renderer/CMakeFiles/Renderer.dir/build.make src/Renderer/CMakeFiles/Renderer.dir/build
.PHONY : Renderer/fast

#=============================================================================
# Target rules for targets named Gameloop

# Build rule for target.
Gameloop: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Gameloop
.PHONY : Gameloop

# fast build rule for target.
Gameloop/fast:
	$(MAKE) $(MAKESILENT) -f src/Gameloop/CMakeFiles/Gameloop.dir/build.make src/Gameloop/CMakeFiles/Gameloop.dir/build
.PHONY : Gameloop/fast

#=============================================================================
# Target rules for targets named Entity

# Build rule for target.
Entity: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Entity
.PHONY : Entity

# fast build rule for target.
Entity/fast:
	$(MAKE) $(MAKESILENT) -f src/Entity/CMakeFiles/Entity.dir/build.make src/Entity/CMakeFiles/Entity.dir/build
.PHONY : Entity/fast

#=============================================================================
# Target rules for targets named AiEntity

# Build rule for target.
AiEntity: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 AiEntity
.PHONY : AiEntity

# fast build rule for target.
AiEntity/fast:
	$(MAKE) $(MAKESILENT) -f src/Entity/CMakeFiles/AiEntity.dir/build.make src/Entity/CMakeFiles/AiEntity.dir/build
.PHONY : AiEntity/fast

#=============================================================================
# Target rules for targets named PlayerEntity

# Build rule for target.
PlayerEntity: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 PlayerEntity
.PHONY : PlayerEntity

# fast build rule for target.
PlayerEntity/fast:
	$(MAKE) $(MAKESILENT) -f src/Entity/CMakeFiles/PlayerEntity.dir/build.make src/Entity/CMakeFiles/PlayerEntity.dir/build
.PHONY : PlayerEntity/fast

#=============================================================================
# Target rules for targets named Scene

# Build rule for target.
Scene: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Scene
.PHONY : Scene

# fast build rule for target.
Scene/fast:
	$(MAKE) $(MAKESILENT) -f src/Scene/CMakeFiles/Scene.dir/build.make src/Scene/CMakeFiles/Scene.dir/build
.PHONY : Scene/fast

#=============================================================================
# Target rules for targets named LogicManager

# Build rule for target.
LogicManager: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 LogicManager
.PHONY : LogicManager

# fast build rule for target.
LogicManager/fast:
	$(MAKE) $(MAKESILENT) -f src/LogicManager/CMakeFiles/LogicManager.dir/build.make src/LogicManager/CMakeFiles/LogicManager.dir/build
.PHONY : LogicManager/fast

#=============================================================================
# Target rules for targets named PhysicsEngine

# Build rule for target.
PhysicsEngine: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 PhysicsEngine
.PHONY : PhysicsEngine

# fast build rule for target.
PhysicsEngine/fast:
	$(MAKE) $(MAKESILENT) -f src/Physics/CMakeFiles/PhysicsEngine.dir/build.make src/Physics/CMakeFiles/PhysicsEngine.dir/build
.PHONY : PhysicsEngine/fast

#=============================================================================
# Target rules for targets named PhysicsObj

# Build rule for target.
PhysicsObj: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 PhysicsObj
.PHONY : PhysicsObj

# fast build rule for target.
PhysicsObj/fast:
	$(MAKE) $(MAKESILENT) -f src/Physics/CMakeFiles/PhysicsObj.dir/build.make src/Physics/CMakeFiles/PhysicsObj.dir/build
.PHONY : PhysicsObj/fast

#=============================================================================
# Target rules for targets named RK4

# Build rule for target.
RK4: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 RK4
.PHONY : RK4

# fast build rule for target.
RK4/fast:
	$(MAKE) $(MAKESILENT) -f src/Physics/CMakeFiles/RK4.dir/build.make src/Physics/CMakeFiles/RK4.dir/build
.PHONY : RK4/fast

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... AiEntity"
	@echo "... App"
	@echo "... Base"
	@echo "... Entity"
	@echo "... Gameloop"
	@echo "... LogicManager"
	@echo "... PhysicsEngine"
	@echo "... PhysicsObj"
	@echo "... PlayerEntity"
	@echo "... RK4"
	@echo "... Renderer"
	@echo "... Scene"
	@echo "... main"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

